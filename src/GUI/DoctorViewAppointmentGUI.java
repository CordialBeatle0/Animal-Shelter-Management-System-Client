/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JTextField;

import RMI.AppointmentDTO;
import RMI.DoctorDTO;

/**
 *
 * @author Shero
 */
public class DoctorViewAppointmentGUI extends javax.swing.JFrame {

    DoctorDTO doctor;
    AppointmentDTO appointment;

    /**
     * Creates new form ViewDoctorAppointmentGUI
     */
    public DoctorViewAppointmentGUI() {
        initComponents();
    }

    public DoctorViewAppointmentGUI(DoctorDTO doctor, AppointmentDTO appointment) {
        initComponents();
        setLocationRelativeTo(null);
        this.doctor = doctor;
        this.appointment = appointment;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldDoctorNameViewAppointment = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAppointmentDetailsViewAppointment = new javax.swing.JTable();
        jButtonBackViewAppointment = new javax.swing.JButton();
        jButtonCancelAppointment = new javax.swing.JButton();
        jButtonRecordDescriptionViewAppointment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldDoctorNameViewAppointment.setEditable(false);
        jTextFieldDoctorNameViewAppointment.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextFieldDoctorNameViewAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDoctorNameViewAppointmentActionPerformed(evt);
            }
        });

        jTableAppointmentDetailsViewAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Date", "Price", "Animal Name", "Animal Type", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableAppointmentDetailsViewAppointment);

        jButtonBackViewAppointment.setText("Back");

        jButtonCancelAppointment.setText("Cancel Appointment");

        jButtonRecordDescriptionViewAppointment.setText("Record Description");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(245, 245, 245)
                                .addComponent(jTextFieldDoctorNameViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonBackViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jButtonCancelAppointment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRecordDescriptionViewAppointment)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jTextFieldDoctorNameViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelAppointment)
                    .addComponent(jButtonRecordDescriptionViewAppointment))
                .addGap(18, 18, 18)
                .addComponent(jButtonBackViewAppointment)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldDoctorNameViewAppointmentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextFieldDoctorNameViewAppointmentActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextFieldDoctorNameViewAppointmentActionPerformed

    public JButton getjButtonBackViewAppointment() {
        return jButtonBackViewAppointment;
    }

    public JButton getjButtonCancelAppointment() {
        return jButtonCancelAppointment;
    }

    public JButton getjButtonRecordDescriptionViewAppointment() {
        return jButtonRecordDescriptionViewAppointment;
    }

    public JTable getjTableAppointmentDetailsViewAppointment() {
        return jTableAppointmentDetailsViewAppointment;
    }

    public JTextField getjTextFieldDoctorNameViewAppointment() {
        return jTextFieldDoctorNameViewAppointment;
    }

    public DoctorDTO getDoctor() {
        return doctor;
    }

    public AppointmentDTO getAppointment() {
        return appointment;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorViewAppointmentGUI.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorViewAppointmentGUI.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorViewAppointmentGUI.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorViewAppointmentGUI.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorViewAppointmentGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBackViewAppointment;
    private javax.swing.JButton jButtonCancelAppointment;
    private javax.swing.JButton jButtonRecordDescriptionViewAppointment;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAppointmentDetailsViewAppointment;
    private javax.swing.JTextField jTextFieldDoctorNameViewAppointment;
    // End of variables declaration//GEN-END:variables
}
